# Generated by Django 2.0.3 on 2018-08-10 17:41

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_toppings', models.CharField(choices=[('0', 'Cheese'), ('1', '1 topping'), ('2', '2 toppings'), ('3', '3 toppings'), ('4', 'Special')], default='Cheese', max_length=10)),
                ('size', models.CharField(choices=[('large', 'Large'), ('small', 'Small')], default='Small', max_length=10)),
                ('type', models.CharField(choices=[('regular', 'Regular'), ('sicilian', 'Sicilian')], default='Regular', max_length=10)),
                ('final_price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_toppings', models.CharField(choices=[('Cheese', 'Cheese'), ('1 Topping', '1 topping'), ('2 Toppings', '2 toppings'), ('3 Toppings', '3 toppings'), ('Special', 'Special')], default='Cheese', max_length=12)),
                ('small_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('large_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('type', models.CharField(choices=[('R', 'Regular'), ('S', 'Sicilian')], default='R', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topping', models.CharField(max_length=64)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='toppings',
            field=models.ManyToManyField(blank=True, related_name='orders', to='orders.Topping'),
        ),
    ]
